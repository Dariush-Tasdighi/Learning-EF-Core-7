**************************************************
**************************************************
**************************************************
*** Session 6 ************************************
**************************************************
**************************************************
**************************************************

**************************************************
(Solution Folder)
[[Class Library / Project]]
[Folder Name]
**************************************************

**************************************************
Sample:

	(src)

		[[Application]]

			[Models]
**************************************************

**************************************************
آموزش یک تناظر ساده
**************************************************
Table (1..N)				Database (1..1)

DataTable (1..N)			DataSet (1..1)

Model / Entity (1..N)		DatabaseContext (1..1)
**************************************************

**************************************************
تاریخچه دسته‌بندی پروژه‌ها
**************************************************

**************************************************
[[EShop]]

	[Models]

		User.cs
		Product.cs

		DatabaseContext.cs
**************************************************

**************************************************
[[EShop]]

[[Models]]

	User.cs
	Product.cs

	DatabaseContext.cs
**************************************************

**************************************************
استاندارد نامگذاری
**************************************************
System.IO
System.Guid

DAL  -> Dal
DTX  -> Dtx
DTAT -> Dtat
**************************************************

**************************************************
[[EShop]]

[[Models]]

	User.cs
	Product.cs

[[Dal, DataAccess, DataAccessLayer, Data]]

	DatabaseContext.cs
**************************************************

**************************************************
[[EShop]]

[[Domain]]

	User.cs
	Product.cs

[[Infrastructure]]

	[Persistance]

		DatabaseContext.cs
**************************************************

**************************************************
[[EShop]]

[[Domain]]

	User.cs
	Product.cs

[[Persistance]]

	DatabaseContext.cs
**************************************************

**************************************************
**************************************************
**************************************************
*** Session 7 ************************************
**************************************************
**************************************************
**************************************************

**************************************************
Standards & DataAnnotations:
	We can use a lot of 'DataAnnotations' without install any Nugets!
**************************************************

**************************************************
Standards without any DataAnnotations!
**************************************************
// Best Practice
public int Id { get; set; }

public int ID { get; set; }

public int ProductId { get; set; }

public int ProductID { get; set; }
**************************************************

**************************************************
When we should use DataAnnotations!
**************************************************
// Error!
public int Code { get; set; }

[System.ComponentModel.DataAnnotations.Key]
public int Code { get; set; }
**************************************************

**************************************************
public int Id { get; set; }

public long Id { get; set; }

// Best Practice
public System.Guid Id { get; set; }
**************************************************

**************************************************
فلسفه لینک
LINQ Philosophy
**************************************************

**************************************************
قدیما
**************************************************
- Database:

sql = "SELECT * FROM Users Where Age > 20";
**************************************************

**************************************************
- C# Objects:

var currentDirectory =
	new System.IO.DirectoryInfo(path: "C:\\Windows");

var files =
	currentDirectory.GetFiles();

foreach (var file in files)
{
	if (file.Length > 20)
	{
		System.Console.WriteLine(value: file.Name);
	}
}
**************************************************

**************************************************
- XML Nodes:

...
**************************************************

**************************************************
جدیدا
**************************************************
using System.Linq;

var users =
	databaseContext.Users
	.Where(current => current.Age > 20)
	.ToList()
	;

var users =
	databaseContext.Users
	.Where(current => current.Age > 20)
	.OrderBy(current => current.FullName)
	.ToList()
	;

foreach (var user in users)
{
	System.Console.WriteLine(value: user.FullName);
}
**************************************************

**************************************************
using System.Linq;

var currentDirectory =
	new System.IO.DirectoryInfo(path: "C:\\Windows");

var files =
	currentDirectory.GetFiles();
	.Where(current => current.Length > 20)
	.ToList()
	;

var files =
	currentDirectory.GetFiles();
	.Where(current => current.Length > 20)
	.OrderBy(current => current.Name)
	.ToList()
	;

foreach (var file in files)
{
	System.Console.WriteLine(value: file.Name);
}
**************************************************

**************************************************
Sample Model (Entity): Category
**************************************************

**************************************************
Primary Constructor in .NET 8.x
**************************************************
namespace Models;

public class Category(string name) : object()
{
	/// <summary>
	/// Primary Key -> Unique (منحصر به فرد)
	/// </summary>
	public int Id { get; set; }

	public string Name { get; set; } = name;
}
**************************************************

**************************************************
POCO -> Plain Old CLR Objects
**************************************************
namespace Models;

public class Category(string name) : Entity()
{
	/// <summary>
	/// Primary Key -> Unique (منحصر به فرد)
	/// </summary>
	public int Id { get; set; }

	public string Name { get; set; } = name;
}
**************************************************
